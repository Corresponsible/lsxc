// Generated by LiveScript 1.5.0
(function(){
  var fs, reactify, browserifyInc, livescript, browserify, xtend, commander, colors, opt, file, target, ref$, bundle, html, input, code, js, basedir, makeBundle;
  fs = require('fs');
  reactify = require('reactify-ls');
  browserifyInc = require('browserify-incremental');
  livescript = require('livescript');
  browserify = require('browserify');
  xtend = require('xtend');
  commander = require('commander');
  colors = require('colors');
  opt = ' Optional'.yellow;
  commander.version('0.0.1').option('-f, --file [filename]', 'Main File. Without extension').option('-t, --target [filename]', 'Result File (result.js).' + opt).option('-b, --bundle [filename]', 'Generate bundle.js' + opt).option('-h, --html', 'Generate HTML included bundle.js for demo.' + opt).parse(process.argv);
  file = commander.file;
  if (file == null) {
    return console.error('File is required');
  }
  target = (ref$ = commander.target) != null ? ref$ : file;
  bundle = (ref$ = commander.bundle) != null ? ref$ : 'bundle';
  html = (ref$ = commander.html) != null ? ref$ : 'index';
  input = file + ".ls";
  console.log("Compile ".yellow + input);
  code = reactify(fs.readFileSync(input).toString('utf-8'));
  js = livescript.compile(code);
  fs.writeFileSync(target + ".js", js);
  basedir = __dirname;
  makeBundle = function(file, callback){
    var options, b, bundle, string;
    options = {
      basedir: basedir,
      paths: [basedir + "/node_modules"],
      debug: false,
      commondir: false,
      entries: [file]
    };
    b = browserify(xtend(browserifyInc.args, options));
    browserifyInc(b, {
      cacheFile: file + ".cache"
    });
    bundle = b.bundle();
    string = "";
    return bundle.on('data', function(data){
      bundle.on('error', function(error){
        return console.error(error);
      });
      string += data.toString();
      bundle.on('end', function(_){
        callback(null, string);
      });
    });
  };
  if (commander.bundle == null) {
    return;
  }
  console.log("Current Directory ".yellow + basedir);
  makeBundle(target + ".js", function(err, bundle){
    var print;
    fs.writeFileSync(bundle + ".js", bundle);
    if (commander.html == null) {
      return;
    }
    print = '<!DOCTYPE html>\n<html lang="en-us">\n  <head>\n   <meta charset="utf-8">\n   <title>Hello...</title>\n  </head>\n  <script type="text/javascript" src="./bundle.js"></script>\n</html>\n';
    fs.writeFileSync(html + "", print);
  });
}).call(this);
